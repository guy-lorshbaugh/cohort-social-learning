COHORT DOO DOO TO-DOO

-  Formatting for:
   ** "Learned"
   **  Comment
   ** Comment Edit

-  Tags display in a "bubble" with random background color.
   ** Colors can be generated by JS in the front-end.

-  Emoji Search attached to:
   ==> A floating emoji menu that follows the cursor would be cool. Also dry.
   ** Comment Edit
   ** New Entry
   ** Edit Entry

- âŒ˜/Ctrl + Enter submit comment edit, JS fills with approrp

-  Comment like/reply

-  Follow users

-  Forgot Password?/Password retrieval

-  User Profiles
   ** User info includes first and last name, location, hometown, work info,
      relationship status, etc.

-  User Preferences
   ** Start Page top/recent
      -  We can then use this home page as the refresh for the Edit dialog and 
         any other spots we need a home page refresh. 
   ** Show/Hide User Info
      - Display name (otherwise username is used)

-  Reorganize stylesheet categories:
   ** Menus

-  Recent Emoji Menu - use a cookie? How do we do that??

-  Design Elements:
   ** Sidebars
      -  Popular posts
      -  Friends
   ** Cleaner entry header
   ** Do we need the "remember" field for posts? Seems kinda redundant.

MAYBE FIXED??

-  "Yesterday" is broken in relative time for entries
   ** Okay, but HOW is it broken?? I see it working with a post from yesterday
   ** I'm going to guess that we were seeing "yesterday" on posts with the same 
      calendar day (e.g., March 29th 2021, and on August 30th 2022). This would 
      have used entry.date.day and compared to now.date.day. We've adjusted the
      macro to compare entry.date to now.date, which should clear it up.



FINITO

XX Emoji Search as a separate system than the emoji menu. They don't coexist
   well.

XX In editable DIVs and inputs submitted by event listeners rather than form 
   buttons we need to handle "required" notifications the JS. These include:
   XX Edit Entry for "Title" and "Learned."
      -- Button grey-out isn't enabled yet
   XX New Entry for "Title" and "Learned."
      -- Button grey-out isn't enabled yet
   XX Comment
   XX Comment edit

XX A dummy <input> field to open New Entry window instead of the titlebar icon.
   ** A randomized placeholder message for the input would be fun, messages like
      "What brings you here today?" "What're you working on?" "Anything got you
      stuck today?" You know, cute stuff like that.

XX entry.js is a prototype for what will need to be refactored to handle both
   "entry edit" and "new entry"/"entry". We'll work with the class class names
   that already exist
   ** It should be called by and "onload" listener on the body. Any number of
      other functions can be called on load.
   ** A "starter" function would be good to orchestrate the execution

XX Prevent sending empty comment.

XX The edit dialog should dynamically update the entry data instead of
   refreshing the page. *grumble*

XX ** It should also have a confirm dialog for "Discard Changes?"

XX This is a site-wide edit, so lots of work, but you can use hidden form
   fields with the editable divs and pass the div.innerHTML into the input
   value for form submit.

XX Edit "Save Changes" button call preventDefault() and submit the form after 
   populating the form.

XX A Class for the global variables could be useful. Or at least good practice.
   ** it was decent practice but the code was too bulky for what amounted to a 
      change of two variables

XX Menu listeners are still garbage. This is an issue that needs dealt with 
   systematically. A listener class could be useful if we can figure out how
   to make it work.

XX ** KeyboardEvent.key for key ID #'s so "delete" and "backspace"* can still
      be used after the character limit is reached, sample function below. 
      We won't use .which, though. Sleepy, forgot the alternative to it:
   // ******
      function check_charcount(content_id, max, e)
         {
            if(e.which != 8 && $('#'+content_id).text().length > max)
            {
               // $('#'+content_id).text($('#'+content_id).text().substring(0, max));
               e.preventDefault();
            }
         }
   // ******
      ** * as well as arrow keys, alt/option, ctrl, tab, Meta, Windows, fn

XX Entry edit needs to redirect to the home page and flash "Your entry has been
   edited"

XX TO DO NOW: delete-option and edit-option need to be made entry-delete-option,
   comment-delete-option, etc

XX So we've kinda gone about entry editing all wrong. If users want to add or 
   remove tags, add resources to remember, or edit the title they can't. We need
   to invoke the form, probably insert the "edit.html" form into the comment 
   area rather than trying to use an editable DIV. This will help us deal with
   token issues as well.

XX Entry delete

XX Entry Options needs to be restarted.
   ** Opening the emoji menu kills the entry option listener somehow. getID()
      throws a TypeError
   => The for loop read // for (item of entryOptions) //, but the 'let' declaration
      is neccesary for the value of 'item' to change.
XX Tragically, the expansive list of fabulous notes that had been compiled
   previously was lost in the labyrinthine hellscape that is Git. But much of 
   what was lost has been restored.
   ** And what's more, this file is no longer included in .gitignore!

BINNED

XX => Edit entry system wasn't sufficient to edit the whole contents.
   Edit Entry returns only the FIRST text div. Need to add the nodes to a list
   and return that to setCaret.
   ** setCaret only works once. (THIS MIGHT BE FIXED, though I don't know how/if
      I actually did it.)
   ** div.esc-notice comes up multiple times if you cick "Edit Entry" more than
      once. Why user might do this I don't know but it's worth preventing 
      anyhow.
